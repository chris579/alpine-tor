env:
  global:
  - secure: "A7A+q3hoMB8L0hiKT+sxkSf+fza2SurjjxabpIa1xQTua8/EF13xu22SihN0nO/387kiPSf9A7WcDB1tUiH0e/GHC4+NcwpRlB0eZKzxY3sAIE1IDQfgFNpT7Ridb8jyoqOLOfKO9yU1hOrgq90O1ogRWZ+lmtPEk7+PUc8DcbGgUNx/l7W/LqNl/XPxL/WYOe7kqyREO46hYKE/dTJ7gL9XLGjybJ0G8gfAfXxFCSJ/BN36JF4/l9JxAekVBGkk+1YQohZCdDJB9IdQNwnW8PdqSWxw3Dddiyj1xGT0GtBYDM08yGvUHj4+oZ9XXurcC+p6W0RUGS7uX4JUKgy4ABWcYWoXB6avCDIQGSOQ41DeI/UPuB/Xocj/QHFWJiu/TsH4v5k7GqyYcI1+th/ZzLdn5A3jDOwKDDkaTAJ2WJSw/97IysT8lKOlnrUeXFyW8Ikhs+/WCv8WWrObh9jkN8LZhuSg3lnLvHQPjuMYQn3DQJSA1uGzWVck9GhbE+zuukrAzaMpXBGKcPE2iFiq40j+A4DTN3ojlB3vgd1YtKVzpayZhxVvN8X5JAu7yTCnkqglAqlYaWSmcOP/nPPWxfJUqcAhxG96M3h+3wd6pJBDiDiyfopbyXRtBWEvrF5MBDa8eTYF7JL6XmkEWLTDGwIQFW78YSuPkXIJ9olb8UY="
  - secure: "mUCKLkc9yxDQ4A1hHAlMHgjaxHhcYwrQzgUp8rb/ihWGfYnkPHGNDEA13MGhgiqatHRT1kNIcvAqgCIGpDICvYkBNrkYFe0FwHsNXIKsCxLKhykhIluIdTZMTvjK7/D/EOW7ChD4sIlXb3gc05iFIZZrOtUPGvh1HsHvtiAcvDgipSJ6m406sal0tkZ2+7UqPvfwdgavAyBZ44YFFzco7AlQhwZAIBjRQYe+Ci3NR4mfyjxWVp7YPETJCmxhNPv0Zjx14Egw8c5+WHpMmoNeFsZ+qGMJHGIeyvcInWUCt4NuWVUl360TqTAN1VE3wOPRZH3XaUmi+MM+jq44WMbtRbGPhSAgoAKPkfzIuut5taxNUUsDowZOuR07OBs0mhgIFJZmflnzYlJ4os+bzsxgMI4DuGb2QwfLOsJxSty4N9CorOTm2EQtPXPQLhAUwFDZsqaLJSxxImJQVSuSYF9uBYmb1AeyU3HjdYpO1JcPw55GWS9O324lq1QJrrzt1X3w7Gs7efaSCbL8M8407fd9KFNptAs20hkjt3NyWYUCO1v7oTPS2rvfelBJ1jb32uBBkwMgs1M9+n7KXZB3JjB7PG7jBeWUQlW43Uy69HlYPNTnPtGWw3RVAOkAGTRhyW8IBpzMwTlGm0ji5aJFkpK95Kpn4qOF9EzHxafXQWT6gRs="

git:
  depth: false

language: bash

services:
- docker

before_script:
- docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
- sudo apt update
- sudo apt install jq
- "export TOKEN=$(curl -s -H \"Content-Type: application/json\" -X POST -d '{\"username\": \"'${DOCKER_USERNAME}'\", \"password\": \"'${DOCKER_PASSWORD}'\"}' https://hub.docker.com/v2/users/login/ | jq -r .token)"
- "export DOCKER_VERSION=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/$TRAVIS_REPO_SLUG/tags/?page_size=2 | jq -r '.results|.[]|.name' | tail -n1)"
- export VERSION=$(docker run --rm alpine:latest /bin/sh -c "apk update --repository http://dl-4.alpinelinux.org/alpine/edge/community/ && apk --update --allow-untrusted --repository http://dl-4.alpinelinux.org/alpine/edge/community/ info -d tor | grep tor | head -1 | sed -e 's/tor-//' |  sed -e 's/ description://'" | tail -n1)
- echo $DOCKER_VERSION
- echo $VERSION
- export VERSION_MAJOR=$(echo $VERSION | cut -d'.' -f1)
- echo $VERSION_MAJOR
- export VERSION_MINOR=$(echo $VERSION | cut -d'.' -f2)
- echo $VERSION_MINOR
- export VERSION_PATCH=$(echo $VERSION | cut -d'.' -f3)
- echo $VERSION_PATCH
- export VERSION_REVISION=$(echo $VERSION | cut -d'.' -f4)
- echo $VERSION_REVISION
- export VERSION_1=$(echo $VERSION_MAJOR.$VERSION_MINOR)
- echo $VERSION_1
- export VERSION_2=$(echo $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH)
- echo $VERSION_2
- export VERSION_3=$(echo $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_REVISION)
- echo $VERSION_3

script:
- docker build -t $TRAVIS_REPO_SLUG:latest -t $TRAVIS_REPO_SLUG:$VERSION_1 -t $TRAVIS_REPO_SLUG:$VERSION_2 -t $TRAVIS_REPO_SLUG:$VERSION_3 .

deploy:
  provider: script
  script: if [ "'$VERSION'" = "'$DOCKER_VERSION'" ]; then echo Skipping deploy because version matches; else docker push $TRAVIS_REPO_SLUG:$VERSION_1 && docker push $TRAVIS_REPO_SLUG:$VERSION_2 && docker push $TRAVIS_REPO_SLUG:$VERSION_3 && docker push $TRAVIS_REPO_SLUG:latest; fi
  on:
    branch: master
